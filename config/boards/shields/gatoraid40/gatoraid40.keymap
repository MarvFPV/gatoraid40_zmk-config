/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

#define nubs NON_US_BSLH
#define sqot SINGLE_QUOTE

&sl     {
         release-after-ms = <150>;
         };

&kscan0 {
         debounce-period = <10>;
         };

/ {
        combos {
                compatible = "zmk,combos";
                combo_bksp {
                        timeout-ms = <50>;
                        key-positions = <19 20>;
                        bindings = <&kp BACKSPACE>;
                };
                combo_backwards_del {
                        timeout-ms = <50>;
                        key-positions = <19 20 21>;
                        bindings = <&kp LC(BACKSPACE)>;
                };
                combo_capslock {
                        timeout-ms = <50>;
                        key-positions = <16 19>;
                        bindings = <&kp CAPSLOCK>;
                };
                 combo_tab {
                        timeout-ms = <50>;
                        key-positions = <15 16>;
                        bindings = <&kp TAB>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
//          -----------------------------------------               -----------------------------------------
// ---------|   Q   |   W   |   E   |   R   |   T   |     split     |   Y   |   U   |   I   |   O   |   P   |---------
// |  ESC   |----------------------------------------               ----------------------------------------|   DEL  |
// ---------|   A   |   S   |   D   |   F   |   G   |     split     |   H   |   J   |   K   |   L   |   '   |---------
// |  CTRL  |----------------------------------------               ----------------------------------------|   RET  |
// ---------|   Z   |   X   |   C   |   V   |   B   |     split     |   N   |   M   |   ,   |   .   |   -   |---------
//          -----------------------------------------               -----------------------------------------
//                          |  LGUI | LOWER | HYPER |     split     | RAISE |  SPC  | LSHFT |
//                          -------------------------               -------------------------
      bindings = <
    &kp ESC       &kp Q  &kp W   &kp E   &kp R  &kp T  /*split*/  &kp Z  &kp U   &kp I     &kp O   &kp P        &kp DEL
    &mt LCTRL TAB &kp A  &kp S   &kp D   &kp F  &kp G  /*split*/  &kp H  &kp J   &kp K     &kp L   &kp LS(BSLH) &kp RET
                  &kp Y  &kp X   &kp C   &kp V  &kp B  /*split*/  &kp N  &kp M   &kp COMMA &kp DOT &kp SLASH 
                                &kp LGUI &mo 1  &mo 3  /*split*/  &sl 2  &kp SPACE &kp LSHFT
                        >;
                sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp C_VOL_DN C_VOL_UP>;
                };

                lower_layer {
//          -----------------------------------------               -----------------------------------------
// ---------|       |  PGDN |   UP  |  PGUP |       |     split     |  F12  |       |  PLAY |       |       |---------
// |  ESC   |----------------------------------------               ----------------------------------------|   DEL  |
// ---------| HOME  |  LEFT | DOWN  | RIGHT |  END  |     split     |  F11  |  PREV | PAUSE |  NEXT |       |---------
// |  CTRL  |----------------------------------------               ----------------------------------------|   RET  |
// ---------|  F1   |   F2  |   F3  |  F4   |  F9   |     split     |  F10  |  F5   |  F6   |  F7   |  F8   |---------
//          -----------------------------------------               -----------------------------------------
//                          |       |       |       |     split     |       |  SPC  | LALT  |
//                          -------------------------               -------------------------
      bindings = <
    &kp ESC   &none    &kp PG_DN &kp UP   &kp PG_UP &none    /*split*/  &kp F12  &none      &kp C_PLAY  &none      &none  &kp DEL
    &kp LCTRL &kp HOME &kp LEFT  &kp DOWN &kp RIGHT &kp END  /*split*/  &kp F11  &kp C_PREV &kp C_PAUSE &kp C_NEXT &none  &kp RET
              &kp F1   &kp F2    &kp F3   &kp F4    &kp F9   /*split*/  &kp F10  &kp F5     &kp F6      &kp F7     &kp F8 
                                 &none    &none     &none    /*split*/  &none    &kp SPACE  &kp LALT 
                        >;

                };

                raise_layer {
//          -----------------------------------------               -----------------------------------------
// ---------|   @   |   $   |   €   |   =   |   !   |     split     |   ?   |   ü   |   #   |   ö   |   ^   |---------
// |  ESC   |----------------------------------------               ----------------------------------------|   DEL  |
// ---------|   ä   |   ß   |   °   |   &   |   *   |     split     |   {   |   (   |   )   |   }   |   "   |---------
// |  CTRL  |----------------------------------------               ----------------------------------------|   RET  |
// ---------|   ~   |   <   |   >   |   |   |   /   |     split     |   [   |   ]   |   ;   |   :   |   _   |---------
//          -----------------------------------------               -----------------------------------------
//                          |   `   |   ´   | LSHIFT|     split     |       |  SPC  | ADJUST|
//                          -------------------------               -------------------------
      bindings = <
    &kp ESC   &kp RA(Q)    &kp LS(N4) &kp RA(E)     &kp LS(N0)   &kp LS(N1)   /*split*/  &kp LS(MINUS) &kp LBKT   &kp BSLH      &kp SEMI    &kp GRAVE  &kp DEL
    &kp LCTRL &kp sqot     &kp MINUS  &kp LS(GRAVE) &kp LS(N6)   &kp LS(RBKT) /*split*/  &kp RA(N7)    &kp LS(N8) &kp LS(N9)    &kp RA(N0)  &kp LS(N2) &kp RET
              &kp RA(RBKT) &kp nubs   &kp LS(nubs)  &kp RA(nubs) &kp LS(N7)   /*split*/  &kp RA(N8)    &kp RA(N9) &kp LS(COMMA) &kp LS(DOT) &kp LS(SLASH) 
                                      &kp LS(EQUAL) &kp EQUAL    &sk LSHFT    /*split*/  &none         &kp SPACE  &mo 4
                        >;
                        
                };

                hyper_layer {
//          -----------------------------------------               -----------------------------------------
// ---------|       |   $   |   €   |   =   |   !   |     split     |   %   |       |   #   |       |   ^   |---------
// |  ESC   |----------------------------------------               ----------------------------------------|   DEL  |
// ---------|   1   |   2   |   3   |   4   |   *   |     split     |   +   |   5   |   6   |   7   |   8   |---------
// |  CTRL  |----------------------------------------               ----------------------------------------|   RET  |
// ---------|   ~   |   <   |   >   |   9   |   /   |     split     |   -   |   0   |   ,   |   .   |       |---------
//          -----------------------------------------               -----------------------------------------
//                          |       |       |       |     split     |       |  SPC  |       |
//                          -------------------------               -------------------------
      bindings = <
    &kp ESC   &none        &kp LS(N4) &kp RA(E)    &kp LS(N0) &kp LS(N1)    /*split*/  &kp LS(N5) &none  &kp BSLH  &none   &kp GRAVE &kp DEL
    &kp LCTRL &kp N1       &kp N2     &kp N3       &kp N4     &kp LS(RBKT)  /*split*/  &kp RBKT   &kp N5 &kp N6    &kp N7  &kp N8    &kp RET
              &kp RA(RBKT) &kp nubs   &kp LS(nubs) &kp N9     &kp LS(N7)    /*split*/  &kp SLASH  &kp N0 &kp COMMA &kp DOT &none 
                                      &none        &none      &sk LSHFT     /*split*/  &none      &kp SPACE &none
                        >;

                };


                adjust_layer {
//          -----------------------------------------               -----------------------------------------
// ---------|  SAT+ |  HUE+ |  ANI+ |  SPI  |  TOG  |     split     |  BT1  |  BT2  |  BT3  |  BT4  |  BT5  |---------
// |  BRI+  |----------------------------------------               ----------------------------------------| BT CLR |
// ---------|  SAT- |  HUE- |  ANI+ |  SPD  |       |     split     |       |       |       |       |       |---------
// |  BRI-  |----------------------------------------               ----------------------------------------|        |
// ---------|       |       |       |       |       |     split     | RESET |       |       |       |       |---------
//          -----------------------------------------               -----------------------------------------
//                          |       |       |       |     split     |       |       |       |
//                          -------------------------               -------------------------
      bindings = <
    &rgb_ug RGB_BRI &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_EFF &rgb_ug RGB_SPI &rgb_ug RGB_TOG  /*split*/  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR
    &rgb_ug RGB_BRD &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_EFR &rgb_ug RGB_SPD &none            /*split*/  &none        &none        &none        &none        &none        &none
                    &none           &none           &none           &none           &none            /*split*/  &reset       &none        &none        &none        &none
                                                    &none           &none           &none            /*split*/  &none        &none        &trans
                        >;

                };
        };
};
